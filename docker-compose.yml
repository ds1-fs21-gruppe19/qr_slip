version: "3.6"
services:
  db:
    image: postgres:13.2
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready-U postgres"]
      timeout: 10s
      interval: 5s
      retries: 15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: qr_slip
    ports:
      - "5432:5432"
    networks:
      - internal
  service_1:
    container_name: service_1
    build: .
    environment:
      JWT_SECRET: 165434867894
      DATABASE_URL: postgres://postgres:password@db:5432/qr_slip
    ports:
      - 8081:8000
    depends_on:
      - db
    networks:
      - internal
      - external
    # deploy:
    #   mode: replicated
    #   replicas: 2
  service_2:
    container_name: service_2
    build: .
    environment:
      JWT_SECRET: 165434867894
      DATABASE_URL: postgres://postgres:password@db:5432/qr_slip
    ports:
      - 8082:8000
    depends_on:
      - db
    networks:
      - internal
      - external
  lb:
    container_name: lb
    image: nginx:alpine
    ports:
      - 8000:8000
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - service_1
      - service_2
    networks:
      - internal
      - external
    command: [nginx-debug, "-g", "daemon off;"]
  frontend:
    container_name: frontend
    build: ../Front-end
    ports:
      - 3000:3000
    networks:
      - internal

networks:
  external:
  internal:
    internal: true